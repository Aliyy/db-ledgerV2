import { LogLevel } from "../LoggerOptions";
import { Category, CategoryLogger } from "./CategoryLogger";
/**
 * Delegate logger, delegates logging to given logger (constructor).
 */
export declare class CategoryDelegateLoggerImpl implements CategoryLogger {
    private _delegate;
    constructor(delegate: CategoryLogger);
    delegate: CategoryLogger;
    trace(msg: string, ...categories: Category[]): void;
    debug(msg: string, ...categories: Category[]): void;
    info(msg: string, ...categories: Category[]): void;
    warn(msg: string, ...categories: Category[]): void;
    error(msg: string, error: Error, ...categories: Category[]): void;
    fatal(msg: string, error: Error, ...categories: Category[]): void;
    resolved(msg: string, error: Error, ...categories: Category[]): void;
    log(level: LogLevel, msg: string, error: Error, ...categories: Category[]): void;
    tracec(msg: () => string, ...categories: Category[]): void;
    debugc(msg: () => string, ...categories: Category[]): void;
    infoc(msg: () => string, ...categories: Category[]): void;
    warnc(msg: () => string, ...categories: Category[]): void;
    errorc(msg: () => string, error: () => Error, ...categories: Category[]): void;
    fatalc(msg: () => string, error: () => Error, ...categories: Category[]): void;
    resolvedc(msg: () => string, error: () => Error, ...categories: Category[]): void;
    logc(level: LogLevel, msg: () => string, error: () => Error, ...categories: Category[]): void;
}
